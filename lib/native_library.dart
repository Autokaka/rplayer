// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

class NativeLibrary {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeLibrary(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeLibrary.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int initialize(
    ffi.Pointer<ffi.Int8> url,
  ) {
    return _initialize(
      url,
    );
  }

  late final _initialize_ptr =
      _lookup<ffi.NativeFunction<_c_initialize>>('initialize');
  late final _dart_initialize _initialize =
      _initialize_ptr.asFunction<_dart_initialize>();

  ffi.Pointer<ffi.Int8> getFFmpegVersion() {
    return _getFFmpegVersion();
  }

  late final _getFFmpegVersion_ptr =
      _lookup<ffi.NativeFunction<_c_getFFmpegVersion>>('getFFmpegVersion');
  late final _dart_getFFmpegVersion _getFFmpegVersion =
      _getFFmpegVersion_ptr.asFunction<_dart_getFFmpegVersion>();
}

typedef _c_initialize = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> url,
);

typedef _dart_initialize = int Function(
  ffi.Pointer<ffi.Int8> url,
);

typedef _c_getFFmpegVersion = ffi.Pointer<ffi.Int8> Function();

typedef _dart_getFFmpegVersion = ffi.Pointer<ffi.Int8> Function();
